/*
COLORS:

*/
/* Basic reset, cross browser, so that every broser renders the page in the same way */
/* Starting clean */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translate 0;
  }
}
* *::after,
*::before {
  margin: 0;
  padding: 0;
  /* To change box model so that border & padding are no longer added to total width and height of an element*/
  box-sizing: inherit;
}

html {
  /* Root font-size */
  /* Change it to 10px to make our life easier, we now know 1rem = 10px */
  /* This defines what 1 rem is */
  font-size: 62.5%;
}

/* Universal font properties & project wide font defintions as they will all be inherited*/
body {
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* Determines if the back part of the elemnt is visible or hidden - 
    helps with shakiness in animations */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}
.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-iteration-count: 3; */
  /* animation-delay: 3s; */
}
.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-in;
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}
.btn--white {
  background-color: #fff;
  color: #777;
}
.btn--white::after {
  background-color: #fff;
}
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* This will automatically apply the styles of the 0%, 
  before the animation starts */
  animation-fill-mode: backwards;
}

.row {
  max-width: 114rem;
  margin: 0 auto;
}
.row:not(:last-child) {
  margin-bottom: 8rem;
}
.row::after {
  content: "";
  display: table;
  clear: both;
}
.row [class^=col-] {
  background-color: orangered;
  color: #fff;
  float: left;
}
.row [class^=col-]:not(:last-child) {
  margin-right: 6rem;
}
.row .col-1-of-2 {
  width: calc((100% - 6rem) / 2);
  background-color: orangered;
}
.row .col-1-of-3 {
  width: calc((100% - 2 * 6rem) / 3);
  background-color: orangered;
}
.row .col-2-of-3 {
  width: calc(2 * (100% - 2 * 6rem) / 3 + 6rem);
  background-color: orangered;
}
.row .col-1-of-4 {
  width: calc((100% - 3 * 6rem) / 4);
  background-color: orangered;
}
.row .col-2-of-4 {
  width: calc(2 * (100% - 3 * 6rem) / 4 + 6rem);
  background-color: orangered;
}

.header {
  /* At every point the height of this eelement should be 95% of the viewport height */
  /* If we did 100 it would make it the same exact height as the viewport e.g 100% */
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(126, 213, 111, 0.8)), url(/natours-project/img/hero.jpg);
  background-size: cover;
  /*  This property ensures that what ever viewport size the image
    stays at the top of the container */
  background-position: top;
  position: relative;
  /*  Specifying 4 coordinates of polygon */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}
.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  height: 3.5rem;
}
.header__text-box {
  position: absolute;
  /* These are in relation to the parent element */
  top: 40%;
  left: 50%;
  /* This is in relation to the actual element itself */
  transform: translate(-50%, -50%);
  text-align: center;
}/*# sourceMappingURL=main.css.map */